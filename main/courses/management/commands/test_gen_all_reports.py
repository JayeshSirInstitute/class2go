from django.core.management.base import BaseCommand, CommandErrorfrom c2g.models import *from django.contrib.auth.models import User,Groupfrom django.db import connection, transactionfrom courses.reports.tasks import generate_and_email_reportsfrom datetime import datetime, timedeltaclass Command(BaseCommand):    help = "Generates course_dashboard and course_quizzes reports _for_courses_that_are_currently_active_. Syntax: manage.py gen_active_course_reports\n"            def handle(self, *args, **options):        now = datetime.now()        active_courses = Course.objects.filter(mode='ready', calendar_end__gt=now)                save_to_s3 = True                for ready_course in active_courses:            # Generate course dashboard report            report = gen_course_dashboard_report(ready_course, save_to_s3)            if save_to_s3:                if report['path']: print "Report successfully written to: %s" % report['path']                else: print "Failed to generate report or write it to S3!"                            # Generate Courser quizzes summary report            report = gen_course_quizzes_report(ready_course, save_to_s3)            if save_to_s3:                if report['path']: print "Report successfully written to: %s" % report['path']                else: print "Failed to generate report or write it to S3!"                            # Video reports            videos = Video.objects.getByCourse(course=ready_course).order_by('-live_datetime')                        for ready_quiz in videos:                report = gen_quiz_full_report(ready_course, ready_quiz, save_to_s3)                if save_to_s3:                    if report['path']: print "Report successfully written to: %s" % report['path']                    else: print "Failed to generate report or write it to S3!"                                # Problemsets            problem_sets = ProblemSet.objects.getByCourse(course=ready_course).order_by('-live_datetime')            for ready_quiz in videos:                report = gen_quiz_full_report(ready_course, ready_quiz, save_to_s3)                if save_to_s3:                    if report['path']: print "Report successfully written to: %s" % report['path']                    else: print "Failed to generate report or write it to S3!"            